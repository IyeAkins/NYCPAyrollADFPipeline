{
	"name": "aggregatetables",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ds_history",
						"type": "DatasetReference"
					},
					"name": "sourcenycpayrollhistory"
				},
				{
					"dataset": {
						"referenceName": "ds_sqldb_nyc_payroll_data",
						"type": "DatasetReference"
					},
					"name": "sourcedssqldbnycpayrolldata"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "table_synapse_nycpayroll_summary",
						"type": "DatasetReference"
					},
					"name": "Summarysink"
				}
			],
			"transformations": [
				{
					"name": "union2020and2021datasets"
				},
				{
					"name": "filterbyfiscalyear"
				},
				{
					"name": "totalpaidcolumn"
				},
				{
					"name": "aggregate1"
				}
			],
			"scriptLines": [
				"parameters{",
				"     df_param_fiscalyear as integer (2020)",
				"}",
				"source(output(",
				"          FiscalYear as integer,",
				"          PayrollNumber as integer,",
				"          AgencyID as string,",
				"          AgencyName as string,",
				"          EmployeeID as string,",
				"          LastName as string,",
				"          FirstName as string,",
				"          AgencyStartDate as date,",
				"          WorkLocationBorough as string,",
				"          TitleCode as string,",
				"          TitleDescription as string,",
				"          LeaveStatusasofJune30 as string,",
				"          BaseSalary as double,",
				"          PayBasis as string,",
				"          RegularHours as double,",
				"          RegularGrossPaid as double,",
				"          OTHours as double,",
				"          TotalOTPaid as double,",
				"          TotalOtherPay as double",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> sourcenycpayrollhistory",
				"source(output(",
				"          FiscalYear as integer,",
				"          PayrollNumber as integer,",
				"          AgencyID as string,",
				"          AgencyName as string,",
				"          EmployeeID as string,",
				"          LastName as string,",
				"          FirstName as string,",
				"          AgencyStartDate as date,",
				"          WorkLocationBorough as string,",
				"          TitleCode as string,",
				"          TitleDescription as string,",
				"          LeaveStatusasofJune30 as string,",
				"          BaseSalary as double,",
				"          PayBasis as string,",
				"          RegularHours as double,",
				"          RegularGrossPaid as double,",
				"          OTHours as double,",
				"          TotalOTPaid as double,",
				"          TotalOtherPay as double",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> sourcedssqldbnycpayrolldata",
				"sourcedssqldbnycpayrolldata, sourcenycpayrollhistory union(byName: true)~> union2020and2021datasets",
				"union2020and2021datasets filter(toInteger(FiscalYear) >= $df_param_fiscalyear) ~> filterbyfiscalyear",
				"filterbyfiscalyear derive(TotalPaid = RegularGrossPaid + TotalOTPaid + TotalOtherPay) ~> totalpaidcolumn",
				"totalpaidcolumn aggregate(groupBy(FiscalYear,",
				"          AgencyName,",
				"          TotalPaid),",
				"     Total = sum(TotalPaid)) ~> aggregate1",
				"aggregate1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          FiscalYear as integer,",
				"          AgencyName as string,",
				"          TotalPaid as double",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     truncate:true,",
				"     format: 'table',",
				"     staged: true,",
				"     allowCopyCommand: true,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> Summarysink"
			]
		}
	}
}